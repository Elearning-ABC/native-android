// Generated by Dagger (https://dagger.dev).
package com.alva.codedelaroute.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.realm.kotlin.Realm;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesRealmDatabaseFactory implements Factory<Realm> {
  private final Provider<Context> contextProvider;

  public AppModule_ProvidesRealmDatabaseFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public Realm get() {
    return providesRealmDatabase(contextProvider.get());
  }

  public static AppModule_ProvidesRealmDatabaseFactory create(Provider<Context> contextProvider) {
    return new AppModule_ProvidesRealmDatabaseFactory(contextProvider);
  }

  public static Realm providesRealmDatabase(Context context) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesRealmDatabase(context));
  }
}
